
#include <stdio.h>
#include <stdlib.h>

#define MAX 10

struct Queue {
    int items[MAX];
    int front, rear;
};

struct Graph {
    int adjMatrix[MAX][MAX];
    int numVertices;
};

void initQueue(struct Queue* q) {
    q->front = -1;
    q->rear = -1;
}

int isQueueEmpty(struct Queue* q) {
    return q->front == -1;
}

void enqueue(struct Queue* q, int value) {
    if (q->rear == MAX - 1) {
        printf("Queue is full\n");
    } else {
        if (q->front == -1) {
            q->front = 0;
        }
        q->rear++;
        q->items[q->rear] = value;
    }
}

int dequeue(struct Queue* q) {
    if (isQueueEmpty(q)) {
        printf("Queue is empty\n");
        return -1;
    } else {
        int item = q->items[q->front];
        q->front++;
        if (q->front > q->rear) {
            q->front = q->rear = -1;
        }
        return item;
    }
}
void initGraph(struct Graph* g, int vertices) {
        int i,j;
    g->numVertices = vertices;
    for ( i = 0; i < vertices; i++) {
        for ( j = 0; j < vertices; j++) {
            g->adjMatrix[i][j] = 0;
        }
    }
}

void addEdge(struct Graph* g, int startVertex, int endVertex) {
    g->adjMatrix[startVertex][endVertex] = 1;
    g->adjMatrix[endVertex][startVertex] = 1;
}

void bfs(struct Graph* g, int startVertex) {
    struct Queue q;
    initQueue(&q);
    int i;
    int visited[MAX] = {0};
    visited[startVertex] = 1;

    enqueue(&q, startVertex);

    printf("BFS traversal starting from vertex %d: ", startVertex);

    while (!isQueueEmpty(&q)) {
        int currentVertex = dequeue(&q);
        printf("%d ", currentVertex);

        for (i = 0; i < g->numVertices; i++) {
            if (g->adjMatrix[currentVertex][i] == 1 && !visited[i]) {
                enqueue(&q, i);
                visited[i] = 1;
            }
        }
    }
    printf("\n");
}

int main() {
    struct Graph g;
    int vertices, edges;
    int i,start;
    printf("Enter the number of vertices: ");
    scanf("%d", &vertices);

    initGraph(&g, vertices);
    printf("Enter the number of edges: ");
    scanf("%d", &edges);

    int startVertex, endVertex;
    for (i = 0; i < edges; i++) {
        printf("Enter edge (start vertex and end vertex): ");
        scanf("%d %d", &startVertex, &endVertex);
        addEdge(&g, startVertex, endVertex);
    }
    printf("Enter the starting vertex for BFS: ");
    scanf("%d", &start);

    bfs(&g, start);

    return 0;
}
